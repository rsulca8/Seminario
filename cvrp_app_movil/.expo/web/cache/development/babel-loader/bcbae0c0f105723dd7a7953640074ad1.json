{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _jsxFileName = \"/home/rodrigo/Documentos/Git/Seminario/scr/cvrp_app_movil/App.js\";\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignInScreen from \"./src/SignInScreen\";\nimport UserProfile from \"./src/UserProfile\";\nimport Loading from \"./src/SplashScreen\";\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\nvar Stack = createStackNavigator();\n\nvar CVRP = function () {\n  function CVRP() {\n    _classCallCheck(this, CVRP);\n  }\n\n  _createClass(CVRP, [{\n    key: \"render\",\n    value: function render() {\n      if (state.isLoading) {\n        return React.createElement(SplashScreen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, state.userToken == null ? React.createElement(Stack.Screen, {\n        name: \"SignIn\",\n        component: SignInScreen,\n        options: {\n          title: 'Sign in',\n          animationTypeForReplace: state.isSignout ? 'pop' : 'push'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }) : React.createElement(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return CVRP;\n}();\n\nexport default CVRP;","map":{"version":3,"sources":["/home/rodrigo/Documentos/Git/Seminario/scr/cvrp_app_movil/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","SignInScreen","UserProfile","Loading","AsyncStorage","Stack","CVRP","state","isLoading","userToken","title","animationTypeForReplace","isSignout","HomeScreen"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;;;;;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;AACA,SAAQC,YAAR,QAA2B,2CAA3B;AAIA,IAAIC,KAAK,GAAGL,oBAAoB,EAAhC;;IACMM,I;;;;;;;6BAGI;AACN,UAAIC,KAAK,CAACC,SAAV,EAAqB;AAEnB,eAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACE,SAAN,IAAmB,IAAnB,GAEC,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAER,YAFb;AAGE,QAAA,OAAO,EAAE;AACPS,UAAAA,KAAK,EAAE,SADA;AAIPC,UAAAA,uBAAuB,EAAEJ,KAAK,CAACK,SAAN,GAAkB,KAAlB,GAA0B;AAJ5C,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,GAcC,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADF;AAoBD;;;;;;AAID,eAAeP,IAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, {Component} from 'react'\nimport {View, Text, StyleSheet, Image, Button, Alert, ImageBackground, \n  TouchableOpacity, TextInput, ScrollView } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignInScreen from './src/SignInScreen'\nimport UserProfile from './src/UserProfile'\nimport Loading from './src/SplashScreen'\nimport {AsyncStorage} from '@react-native-async-storage/async-storage'\n\n\n\nvar Stack = createStackNavigator();\nclass CVRP{\n  \n\n  render(){ \n    if (state.isLoading) {\n      // We haven't finished checking for the token yet\n      return <SplashScreen />;\n    }\n\n    return (\n      <Stack.Navigator>\n        {state.userToken == null ? (\n          // No token found, user isn't signed in\n          <Stack.Screen\n            name=\"SignIn\"\n            component={SignInScreen}\n            options={{\n              title: 'Sign in',\n              // When logging out, a pop animation feels intuitive\n              // You can remove this if you want the default 'push' animation\n              animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n            }}\n          />\n        ) : (\n          // User is signed in\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n        )}\n      </Stack.Navigator>\n    );\n  }\n\n}\n\n  export default CVRP"]},"metadata":{},"sourceType":"module"}