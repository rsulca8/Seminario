{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/rodrigo/Documentos/Git/Seminario/scr/cvrp_app_movil/src/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AsyncStorage } from '@react-native-async-storage/async-storage';\nimport API from \"./API\";\nimport Header from \"./header\";\nimport Body from \"./body\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.navegar = function _callee(param) {\n      var userLogin;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (param == 'Loading') {\n                userLogin = {\n                  user: _this.state.user,\n                  perm: true\n                };\n                AsyncStorage.setItem(\"userLogin\", JSON.stringify(userLogin));\n\n                _this.props.navigation.navigate(params);\n              } else {\n                _this.props.navigation.navigate(param);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      user: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        source: require(\"../images/fondo.jpg\"),\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  footer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  flex: {\n    flex: 1\n  },\n  footerLeft: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  footerCenter: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  footerRight: {\n    alignItems: 'flex-end',\n    justifyContent: 'center'\n  },\n  textColor: {\n    color: 'white'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/home/rodrigo/Documentos/Git/Seminario/scr/cvrp_app_movil/src/Login.js"],"names":["React","Component","AsyncStorage","API","Header","Body","Login","props","navegar","param","userLogin","user","state","perm","setItem","JSON","stringify","navigation","navigate","params","password","require","styles","container","StyleSheet","create","flex","flexDirection","footer","footerLeft","alignItems","justifyContent","footerCenter","footerRight","textColor","color"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;AAGA,SAAQC,YAAR,QAA2B,2CAA3B;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;;IAEMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,UASlBC,OATkB,GASR,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,kBAAGA,KAAK,IAAI,SAAZ,EAAsB;AACdC,gBAAAA,SADc,GACF;AACZC,kBAAAA,IAAI,EAAG,MAAKC,KAAL,CAAWD,IADN;AAEZE,kBAAAA,IAAI,EAAE;AAFM,iBADE;AAKlBX,gBAAAA,YAAY,CAACY,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeN,SAAf,CAAlC;;AACA,sBAAKH,KAAL,CAAWU,UAAX,CAAsBC,QAAtB,CAA+BC,MAA/B;AACH,eAPD,MAQI;AACA,sBAAKZ,KAAL,CAAWU,UAAX,CAAsBC,QAAtB,CAA+BT,KAA/B;AACH;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATQ;;AAEd,UAAKG,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,EADG;AAETS,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFc;AAMjB;;;;6BAiBO;AACJ,aACI,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAIC,OAAO,uBAAlC;AAA2D,QAAA,KAAK,EAAEC,MAAM,CAACC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAhCetB,S;;AAoCpB,IAAMqB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAG;AACVG,IAAAA,IAAI,EAAG,CADG;AAEVC,IAAAA,aAAa,EAAG;AAFN,GADiB;AAK7BC,EAAAA,MAAM,EAAG;AACPF,IAAAA,IAAI,EAAG,CADA;AAEPC,IAAAA,aAAa,EAAG;AAFT,GALoB;AAS7BD,EAAAA,IAAI,EAAG;AACLA,IAAAA,IAAI,EAAG;AADF,GATsB;AAY7BG,EAAAA,UAAU,EAAG;AACXC,IAAAA,UAAU,EAAG,QADF;AAEXC,IAAAA,cAAc,EAAG;AAFN,GAZgB;AAgB7BC,EAAAA,YAAY,EAAG;AACbF,IAAAA,UAAU,EAAG,QADA;AAEbC,IAAAA,cAAc,EAAG;AAFJ,GAhBc;AAoB7BE,EAAAA,WAAW,EAAG;AACZH,IAAAA,UAAU,EAAG,UADD;AAEZC,IAAAA,cAAc,EAAG;AAFL,GApBe;AAwB7BG,EAAAA,SAAS,EAAG;AACVC,IAAAA,KAAK,EAAG;AADE;AAxBiB,CAAlB,CAAf;AA4BA,eAAe7B,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {View, Text, StyleSheet, Image, Button, Alert, ImageBackground, TouchableOpacity, TextInput, ScrollView, }\nfrom 'react-native'\nimport {AsyncStorage} from '@react-native-async-storage/async-storage'\nimport API from \"./API\"\nimport Header from './header'\nimport Body from './body'\n\nclass Login extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            user: '',\n            password: '',\n        }\n    }\n\n    // método anónimo?? :D \n    navegar = async (param) => {\n        if(param == 'Loading'){\n            let userLogin = {\n                user : this.state.user,\n                perm: true\n            }\n            AsyncStorage.setItem(\"userLogin\", JSON.stringify(userLogin))\n            this.props.navigation.navigate(params)\n        }\n        else{\n            this.props.navigation.navigate(param)\n        }\n    }\n\n    render(){\n        return(\n            <ImageBackground source = {require('../images/fondo.jpg')} style={styles.container}>\n                <Header />\n                <Body />            \n            </ImageBackground>    \n        )\n    }\n\n}\n\nconst styles = StyleSheet.create({\n    container : {\n      flex : 1,\n      flexDirection : 'column'\n    },\n    footer : {\n      flex : 1,\n      flexDirection : 'row'\n    },\n    flex : {\n      flex : 1\n    },\n    footerLeft : {\n      alignItems : 'center',\n      justifyContent : 'center'\n    },\n    footerCenter : {\n      alignItems : 'center',\n      justifyContent : 'center'\n    },\n    footerRight : {\n      alignItems : 'flex-end',\n      justifyContent : 'center'\n    },\n    textColor : {\n      color : 'white'\n    }\n  })\nexport default Login"]},"metadata":{},"sourceType":"module"}